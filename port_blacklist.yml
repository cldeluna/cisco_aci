---
###############################################################################
# This playbook executes actions on an APIC Controller via the Ansible ACI Rest Module
#
#  The playbookd reads in a YAML file of payload data
#  Renders the payload based on that payload data using the templates/int_enable_disable.j2
#  Jinja template
#  It then uses the Ansible ACI Rest Module to push that payload
#
#
# EXECUTION:
# ansible-playbook -i hosts port_blacklist.yml
###############################################################################

- name: ACI Port Blacklist Playbook
  hosts: aci
  gather_facts: no

  vars:
    aci_user: admin
    aci_pwd: ciscopsdt
    aci_host: sandboxapicdc.cisco.com

  tasks:
    - name: Get Port Blacklist Payload Data
      include_vars: ./group_vars/port_blacklist.yml
      register: output

    - name: Display Included Payload
      debug: var=output

    - name: Create Port Blacklist Payload
      template:
        src: "./templates/int_enable_disable.j2"
        dest: "./payload/{{ change_ticket }}-port-blacklist.json"
      delegate_to: localhost

    - name: "POST Blacklist Payload to {{ aci_host }}"
      aci_rest:
        hostname: '{{ aci_host }}'
        username: '{{ aci_user }}'
        password: '{{ aci_pwd }}'
        validate_certs: no
        method: post
        path: /api/node/mo/uni/fabric/outofsvc.json
        src: "./payload/{{ change_ticket }}-port-blacklist.json"
      delegate_to: localhost
      register: output
      set_fact:
        play_status: "{{ 'Play was successful!' if not output.failed  else 'Play failed! Please review POST Results' }}"

    - name: Display POST Results
      debug: var=output

    - name: Display POST Summayr
      debug:
        msg={{ play_status }